syntax = "proto3";
package canvas.canvas;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "canvas/canvas/params.proto";
import "canvas/canvas/canvas.proto";
import "canvas/canvas/stored_colors.proto";
// this line is used by starport scaffolding # 1

option go_package = "canvas/x/canvas/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/canvas/canvas/params";
  }
  // Queries a Canvas by index.
	rpc Canvas(QueryGetCanvasRequest) returns (QueryGetCanvasResponse) {
		option (google.api.http).get = "/canvas/canvas/canvas";
	}
// Queries a StoredColors by index.
	rpc StoredColors(QueryGetStoredColorsRequest) returns (QueryGetStoredColorsResponse) {
		option (google.api.http).get = "/canvas/canvas/stored_colors/{index}";
	}

	// Queries a list of StoredColors items.
	rpc StoredColorsAll(QueryAllStoredColorsRequest) returns (QueryAllStoredColorsResponse) {
		option (google.api.http).get = "/canvas/canvas/stored_colors";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetCanvasRequest {}

message QueryGetCanvasResponse {
	Canvas Canvas = 1 [(gogoproto.nullable) = false];
}
message QueryGetStoredColorsRequest {
	  string index = 1;

}

message QueryGetStoredColorsResponse {
	StoredColors storedColors = 1 [(gogoproto.nullable) = false];
}

message QueryAllStoredColorsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllStoredColorsResponse {
	repeated StoredColors storedColors = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
